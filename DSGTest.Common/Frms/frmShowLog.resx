<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAAAAEACACoDgAANgAAACAgAAABAAgAqAgAAN4OAAAQEAAAAQAIAGgFAACGFwAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAfIyQAISIiACMkJQAnJycAIiYoACYo
        KQAmKCwAKCkpACkrLAApLC0ALC0tACotMAAsLjEALjEyAC4xNAAxMTIAMDI1ADI0NQA1NTYAMjU5ADQ3
        OQA2ODkANjk9ADc8PwA4OToAODo9ADk8PQA8PT4AOj1BADw+QgA9QEEAPUBEAEBBQgBAQkUAQURFAERF
        RQBCRUgAREZKAEZISQBGSUwASEpNAElNTgBNTU4ASEtQAEpNUQBMTlEATU5UAE1QUQBOUVUAT1NYAFBS
        VgBRVVYAVFVWAFJVWABUVlkAV1dcAFVYWgBXXFsAVllcAFdcXQBZWloAWFpdAFpcXQBcXV4AWVtgAFpd
        YQBcXWAAXWBhAF9gZQBgYmIAYWNkAGJkZQBkZWYAZGZoAGZpaABmaGwAaWlpAGlrbQBsa2wAbG1tAGpr
        cABqbXEAbG5wAG5wcABvcnYAcHFxAHFydABydXUAdXZ2AHJ0eAB2eHkAd3p9AHh5eQB6fH0AfH19AHx/
        ggB9gIEAgoKCAIKChACBhIUAhIWFAIeHiQCGiIkAh4mNAImKigCJi4wAiYyNAIyOjgCLj5AAjI6QAJCP
        kACOkJEAj5OXAJGSkgCRkpQAkpSVAJSUlACVlpkAlpiZAJecnACYmZoAmZqdAJqdnQCdnp4Am56hAJ2f
        oACeoKAAoKGiAKGipACipKUApKamAKWlqACjqKgApqipAKmqqgCoqqwAqqytAKyurgCtr7AArrCwALCy
        sgCxs7QAsrS0ALS1tgC0trgAtri5ALe8uwC3u70AuLq6ALm7vAC6vL0AvL6+ALvAvwC9v8AAv7/EAL7A
        wAC/wsQAwMLCAMHCxADCxMQAxMXFAMPEyADFx8gAxsjJAMfJzQDIyckAycvMAMrMzQDMzc0Ay87RAM3O
        0QDO0NAA0dLSANHT1ADS1NUA1dXVANTW2ADV2NkA19vcANjZ2QDZ2twA2dzdAN3d3gDb3uIA3N7hAN3g
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALqTa1I5LBclLUtuircAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAP//gAP//wAA//wAAH//AAD/8AAAH/8AAP/AAAAH/wAA/4AAAAP/AAD/AAAAAP8AAP4A
        AAAAfwAA/AAAAAA/AAD4AAAAAD8AAPAAAAAAHwAA4AAAAAAPAADgAAAAAA8AAMAAAAAABwAAwAAAAAAH
        AACAAAAAAAMAAIAAAAAAAwAAgAAAAAADAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAA
        AAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAB
        AAAAAAAAAAEAAIAAAAAAAwAAgAAAAAADAADAAAAAAAMAAMAAAAAABwAAwAAAAAAHAADgAAAAAA8AAOAA
        AAAADwAA8AAAAAAfAAD4AAAAAD8AAPwAAAAAfwAA/gAAAAD/AAD/AAAAAf8AAP+AAAAD/wAA/8AAAAf/
        AAD/8AAAH/8AAP/8AAB//wAA//+AA///AAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAQAAAAAAAC0vMAAuMDIALzE0ADAxMgAwMjQAMTQ2ADQ1NwAyNTgANTY4ADU4OgA2OTwAODk6ADg6
        PQA5PD4APD0+ADk9QAA8P0EAPUBCAD5BRABAQUIAQEJFAEFERQBFRkcAQkVJAERGSQBFSEoAR0lMAEhJ
        SgBJSkwASkxOAExNTgBJS1AASk1QAExOUQBOUFEATlFUAFBRUgBQUlUAUlRWAFRVVgBSVVgAVFZZAFVX
        XABXWFkAVlhdAFlaWgBYWlwAWlxdAF1eXwBaXWAAXF5hAF5gYQBhY2UAYWRlAGRlZQBiZWgAZGZoAGVo
        aQBnaW0AaWpqAGhqbQBqbG0AbGxtAG5wcQBvcHQAcXFyAHBydQBydHUAdnd3AHJ1eAB0dnkAdnh5AHh6
        egB7fH0AfX5/AH1/gAB9gIEAfoCEAICAgQCAgoQAgoSFAISFhgCGh4gAhoiIAIaJjACIiYoAioyNAIyM
        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
        Q18AAAAAAAAAAAAAAAD//////8AD//8AAP/8AAB/+AAAH/AAAA/gAAAPwAAAB8AAAAOAAAADgAAAAYAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAGAAAABgAAAA4AAAAPAAAAHwAAAB/AA
        AA/wAAAf/AAAP/wAAH//AAH//+AP/ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAMzU4ADQ2OQA1ODoANzo9ADg6PQA6PD4APD5AAD5AQgA+QUQAQEJDAEBCRABCREYAREZHAERH
        SQBGSEoAR0lNAElMTQBLTVAATU9RAE9RVABRUlMAUFJUAFNVVwBUVlkAVllaAFhaXQBaXF4AXF5fAFxe
        YQBjZWcAZWdpAGdpawBpamsAamxuAGxtbwBsbnAAb3BxAHFydABydHYAdnd5AHh5egB5fH0AfH5/AH6A
        gQCAgIIAgYOFAIOEhgCEhYYAhIaIAIeJiwCJiowAioyNAI6QkQCQkpQAk5WWAJWWlwCWmZsAmJmZAJmb
        nACdnZ4Anp+gAJ+hogCgoaIAo6SmAKWmqACoqaoAqqytAKytrgCusLAAsLGyALKztQCxtLQAtLa2ALW2
        uAC2uLgAubq8ALq8vAC8vb4AwMHDAMHCxADExMUAxcfIAMfIyQDIycoAysvMAMvMzADNzc4Azs/RANDQ
        0gDV1dYA1tfYANvb3ADd3d4A39/gAOHh4gDm5uYA6OjpAO7u7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAOAwcICAcCHAAAAAAAADUDCBMdJiQYEQgHQgAAADwCDx5B
        R0dHRzkZCgcAAAAHCiFHKi1HRyEzQhkIHQAABxRKTz83Tk4zPUI4EQIAHAgoU1VVU0I8R0tFRxkHAAgO
        NzRCWVNTSzVOLUIhCAAHDjgsNVk3UlIsRyU9KAgAGAguWWBhRy0tRVJOSx0GADQHGVxiYFJbWkJTT0IU
        AwAAAg4uUyE1YVwhKk4fCA4AACYHEy1HR2BcP0IhDwIAAAAAGQcPHC08PCoXCgM1AAAAAAAoAgcIDwoK
        Bwc8AAAAAAAAAAA0FwcHHAAAAAAAAP//AADwDwAAwAMAAIADAACAAQAAgAEAAAABAAAAAQAAAAEAAAAB
        AAAAAQAAgAEAAIADAADAAwAA4AcAAPg/AAA=
</value>
  </data>
</root>